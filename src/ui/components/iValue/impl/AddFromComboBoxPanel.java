/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.components.iValue.impl;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import ui.components.iValue.IValue;
import vrednosniValidator.VrednosniValidator;
import vrednosniValidator.impl.VrednosniValidatorDefault;

/**
 *
 * @author Aleksa
 */
public class AddFromComboBoxPanel extends javax.swing.JPanel implements IValue {

    private vrednosniValidator.VrednosniValidator validator;
    private DefaultListModel<Object> model;
    private String state = "";

    /**
     *
     */
    public AddFromComboBoxPanel() {
        initComponents();
        validator = new VrednosniValidatorDefault();
        prepareJlist();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlabText = new javax.swing.JLabel();
        jcomboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        btnRemove = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();

        jlabText.setText("jlabText:");

        jcomboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "jcomboBox" }));

        jList.setModel(new javax.swing.AbstractListModel<Object>() {
            String[] strings = { "jList" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList);

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jlabText, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabText)
                    .addComponent(jcomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove)
                    .addComponent(btnSelect)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        Object selectedItem = jcomboBox.getSelectedItem();
        if (!model.contains(selectedItem)) {
            model.addElement(selectedItem);
        }
        printModel();
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int numberOfElementToBeRemoved = jList.getSelectedIndex();
        model.removeElementAt(numberOfElementToBeRemoved);
    }//GEN-LAST:event_btnRemoveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSelect;
    private javax.swing.JList<Object> jList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Object> jcomboBox;
    private javax.swing.JLabel jlabText;
    // End of variables declaration//GEN-END:variables

    /**
     * vraca objekte iz JList
     * ako je stanje singleTake onda vraca samo jedan objekat
     * @return List<Object>
     * @throws Exception
     */
    @Override
    public Object getValue() throws Exception {
        if (state.equals("singleTake") && jList.getModel().getSize()>0) {
            return jList.getModel().getElementAt(0);
        }
        List<Object> output = new ArrayList<Object>();
        for (int i = 0; i < jList.getModel().getSize(); i++) {
            output.add(jList.getModel().getElementAt(i));
        }
        return output;
    }

    /**
     * ubacuje i JList
     *
     * @param value
     */
    @Override
    public void setValue(Object value) {
        if (value == null) {
            System.out.println("null vrednost u setValue");
            return;
        }
        if (((List<Object>) value).size() == 0) {
            System.out.println("prazna lista je u set value");
            return;
        }
        prepareJlist();
        List<Object> itemsInJList = (List<Object>) value;
        for (Object item : itemsInJList) {
            model.addElement(item);
        }
    }

    /**
     * ubacuje u comboBox
     * @param initValue 
     */
    @Override
    public void inicialize(Object initValue) {
        if (initValue == null) {
            return;
        }
        if (!(initValue instanceof List)) {
            System.out.println("Nije ubacena lista!!!");
            return;
        }
        List<Object> list = (List<Object>) initValue;
        
        prepareJlist();
        jcomboBox.removeAllItems();
        for (Object item : list) {
            jcomboBox.addItem(item);
        }
    }

    @Override
    public void setValidator(VrednosniValidator validator) {
        this.validator = validator;
    }

    private void printModel() {
        for (int i = 0; i < model.size(); i++) {
            System.out.println(model.getElementAt(i));
        }
    }
    private void prepareJlist() {
        model = new DefaultListModel<Object>();
        printModel();
        jList.setModel(model);
        jList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    }

    public DefaultListModel<Object> getModel() {
        return model;
    }

    public javax.swing.JButton getBtnRemove() {
        return btnRemove;
    }

    public javax.swing.JButton getBtnSelect() {
        return btnSelect;
    }

    public javax.swing.JComboBox<Object> getJcomboBox() {
        return jcomboBox;
    }

    public javax.swing.JLabel getJlabText() {
        return jlabText;
    }
    public void setState(String state){
        this.state = state;
    }

}
